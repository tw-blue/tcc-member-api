{
    "openapi": "3.1.0",
    "info": {
        "title": "Tcc  Member API",
        "description": "API for the TCC Member Database",
        "version": "1.0.0",
        "contact": {
            "name": "TCC",
            "url": "https://taekwondo-chemnitz-toni714.de/kontakt",
            "email": "toniwalter.blue@gmail.com"
        }
    },
    "servers": [
        {
            "url": "https://localhost:8080/api/v1",
            "description": "Development server"
        },
        {
            "url": "https://tcc-member-db-4bfaysdsja-ew.a.run.app/api/v1",
            "description": "Production server"
        }
    ],
    "paths": {
        "/ok": {
            "get": {
                "operationId": "getOk",
                "summary": "Check if the API is running",
                "tags": [
                    "Health Check"
                ],
                "responses": {
                    "200": {
                        "description": "API is running"
                    }
                },
                "security": []
            }
        },
        "/auth": {
            "get": {
                "operationId": "getAuth",
                "summary": "Check if the user is authenticated",
                "tags": [
                    "Health Check"
                ],
                "responses": {
                    "200": {
                        "description": "User is authenticated"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/members": {
            "get": {
                "operationId": "getMembers",
                "summary": "Get all Members",
                "tags": [
                    "View"
                ],
                "responses": {
                    "200": {
                        "description": "List of all Members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Member"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "cc_viewMembers"
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "postMembers",
                "summary": "Add a new Member",
                "tags": [
                    "Modify"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Member added"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "cc_viewMembers"
                        ]
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "operationId": "getUsers",
                "summary": "Get all Users",
                "tags": [
                    "View"
                ],
                "responses": {
                    "200": {
                        "description": "List of all Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "cc_manageUsers"
                        ]
                    }
                ]
            }
        },
        "/claims/{uid}/{claim}": {
            "put": {
                "operationId": "putClaims",
                "summary": "Update Claim Value for User",
                "tags": [
                    "Modify"
                ],
                "responses": {
                    "200": {
                        "description": "Claim updated"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Firebase User-ID"
                        }
                    },
                    {
                        "name": "claim",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Claim"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": [
                            "cc_manageUsers"
                        ]
                    }
                ]
            }
        },
        "/exam/registration": {
            "get": {
                "operationId": "getExamRegistrations",
                "summary": "List all Exam Registrations",
                "tags": [
                    "View"
                ],
                "responses": {
                    "200": {
                        "description": "List of registered Members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExamRegistration"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "cc_viewMembers"
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "postExamRegistration",
                "summary": "Register a Member for an Exam",
                "tags": [
                    "Modify"
                ],
                "responses": {
                    "200": {
                        "description": "Member Registered"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExamMember"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "cc_viewMembers"
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "deleteExamRegistration",
                "summary": "Delete a Member from the Exam Registration",
                "tags": [
                    "Modify"
                ],
                "responses": {
                    "200": {
                        "description": "Member deleted"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                },
                "parameters": [
                    {
                        "name": "memberId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": [
                            "cc_viewMembers"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "Bearer",
                "description": "JWT token",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Member": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "vorname": {
                        "type": "string"
                    },
                    "nachname": {
                        "type": "string"
                    },
                    "geburtsdatum": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "geburtsort": {
                        "type": "string"
                    },
                    "geschlecht": {
                        "type": "string"
                    },
                    "passnummer": {
                        "type": "string"
                    },
                    "uvertrag": {
                        "type": "boolean"
                    },
                    "verein": {
                        "type": "boolean"
                    },
                    "graduierung": {
                        "type": "string"
                    },
                    "letztePruefung": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "kontakt": {
                        "type": "string"
                    }
                }
            },
            "Date": {
                "type": "string"
            },
            "Claim": {
                "type": "string"
            },
            "User": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "customClaims": {
                        "$ref": "#/components/schemas/Claims"
                    },
                    "email": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    }
                }
            },
            "Claims": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "ExamRegistration": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string"
                    },
                    "clubStatus": {
                        "type": "integer"
                    },
                    "newKup": {
                        "type": "integer"
                    },
                    "parentalConsent": {
                        "type": "integer"
                    },
                    "spellingConfirmation": {
                        "type": "integer"
                    },
                    "fee": {
                        "type": "integer"
                    },
                    "feePaid": {
                        "type": "boolean"
                    },
                    "vorname": {
                        "type": "string"
                    },
                    "nachname": {
                        "type": "string"
                    },
                    "geburtsdatum": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "geburtsort": {
                        "type": "string"
                    },
                    "geschlecht": {
                        "type": "string"
                    },
                    "passnummer": {
                        "type": "string"
                    },
                    "graduierung": {
                        "type": "string"
                    }
                }
            },
            "ExamMember": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string"
                    },
                    "clubStatus": {
                        "type": "integer"
                    },
                    "newKup": {
                        "type": "integer"
                    },
                    "parentalConsent": {
                        "type": "integer"
                    },
                    "spellingConfirmation": {
                        "type": "integer"
                    },
                    "fee": {
                        "type": "integer"
                    },
                    "feePaid": {
                        "type": "boolean"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Health Check",
            "description": "Check if the API is running &  well"
        },
        {
            "name": "View",
            "description": "View Data"
        },
        {
            "name": "Modify",
            "description": "Modify/Create Data"
        }
    ]
}
